<?xml version="1.0"?>
<robot name="simple_quad" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="namespace"  value="simple_quad"/>

  <!-- Define robot constants -->
  <xacro:property name="arm_length"  value="0.30"/>
  <xacro:property name="arm_radius"  value="0.02"/> 
  <xacro:property name="prop_radius" value="0.10"/>
  <xacro:property name="base_radius" value="0.05"/>
  <xacro:property name="base_height" value="0.05"/>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Robot Base -->
  <link name="base_link">
      <visual>
        <geometry>
          <cylinder radius="${base_radius}" length="${base_height}"/>
        </geometry>
        <material name="base">
          <color rgba="0 1.0 0.0 1"/>
        </material>
      </visual>
	    
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${base_radius}" length="${base_height}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.1" r="${base_radius}" h="${base_height}"/>
  </link>

  <!-- Arms -->
  <xacro:macro name="arm" params="prefix color arm_angle">

  <joint name="${prefix}_joint" type="fixed">
    <parent link="base_link"/>
    <child link="${prefix}_link"/>
    <origin xyz="0.0 0.0 0.0" rpy="0 0 ${arm_angle+pi/4}"/>
  </joint>

    <link name="${prefix}_link">
      <visual>
        <origin xyz="${arm_length/2} 0 0" rpy="${pi/2} 0 ${pi/2}"/>
        <geometry>
            <cylinder radius="${arm_radius}" length="${arm_length}"/>
        </geometry>
	<material name="black">
	   <color rgba="0 0 0 1"/>
        </material>
      </visual>

      <collision>
        <origin xyz="${arm_length/2} 0 0" rpy="${pi/2} 0 ${pi/2}"/>
        <geometry>
          <cylinder radius="${arm_radius}" length="${arm_length}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.01" r="${arm_radius}" h="${arm_length}"/>
    </link>

  <joint name="${prefix}_motor_joint" type="fixed">
    <parent link="${prefix}_link"/>
    <child link="${prefix}_motor_link"/>
    <origin xyz="${arm_length} 0.0 0.0" rpy="0 0 0"/>
  </joint>

    <link name="${prefix}_motor_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="${prop_radius}" length="0.03"/>
        </geometry>
	<material name="${prefix}_color">
           <color rgba="${color}"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${prop_radius}" length="0.03"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.01" r="${prop_radius}" h="0.03"/>
    </link>

  </xacro:macro>

  <xacro:arm prefix="arm1" color="1.0 0.0 0.0 1.0" arm_angle="0" />
  <xacro:arm prefix="arm3" color="0.0 0.0 1.0 1.0" arm_angle="${pi/2}" />
  <xacro:arm prefix="arm4" color="1.0 0.0 0.0 1.0" arm_angle="${pi}" />
  <xacro:arm prefix="arm2" color="0.0 0.0 1.0 1.0" arm_angle="${3*pi/2}" />


<link name="imu_link">
  <visual>
    <geometry>
      <box size="0.01 0.01 0.01"/>
    </geometry>
  </visual>

  <collision>
    <geometry>
      <box size="0.01 0.01 0.01"/>
    </geometry>
  </collision>

  <xacro:box_inertia m="0.01" w="0.01" d="0.01" h="0.01"/>
</link>

<joint name="imu_joint" type="fixed">
  <parent link="base_link"/>
  <child link="imu_link"/>
  <origin xyz="0 0 0.01"/>
</joint>

<gazebo reference="imu_link">
<sensor name="imu_sensor" type="imu">
  <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
    <initialOrientationAsReference>false</initialOrientationAsReference>
    <topicName>/simple_quad/imu</topicName>
    <bodyName>imu_link</bodyName>
    <frameName>imu_link</frameName>
  </plugin>
  <always_on>true</always_on>
  <update_rate>100</update_rate>
  <visualize>true</visualize>
  <imu>
    <angular_velocity>
      <x>
        <noise type="gaussian">
          <mean>0.0</mean>
          <stddev>2e-4</stddev>
          <bias_mean>0.0000075</bias_mean>
          <bias_stddev>0.0000008</bias_stddev>
          <!-- <mean>0.0</mean>
          <stddev>0.0</stddev>
          <bias_mean>0.0</bias_mean>
          <bias_stddev>0.0</bias_stddev> -->
        </noise>
      </x>
      <y>
        <noise type="gaussian">
          <mean>0.0</mean>
          <stddev>2e-4</stddev>
          <bias_mean>0.0000075</bias_mean>
          <bias_stddev>0.0000008</bias_stddev>
          <!-- <mean>0.0</mean>
          <stddev>0.0</stddev>
          <bias_mean>0.0</bias_mean>
          <bias_stddev>0.0</bias_stddev> -->
        </noise>
      </y>
      <z>
        <noise type="gaussian">
          <mean>0.0</mean>
          <stddev>2e-4</stddev>
          <bias_mean>0.0000075</bias_mean>
          <bias_stddev>0.0000008</bias_stddev>
          <!-- <mean>0.0</mean>
          <stddev>0.0</stddev>
          <bias_mean>0.0</bias_mean>
          <bias_stddev>0.0</bias_stddev> -->
        </noise>
      </z>
    </angular_velocity>
    <linear_acceleration>
      <x>
        <noise type="gaussian">
          <mean>0.0</mean>
          <stddev>1.7e-2</stddev>
          <bias_mean>0.1</bias_mean>
          <bias_stddev>0.001</bias_stddev>
          <!-- <mean>0.0</mean>
          <stddev>0.0</stddev>
          <bias_mean>0.0</bias_mean>
          <bias_stddev>0.0</bias_stddev> -->
        </noise>
      </x>
      <y>
        <noise type="gaussian">
          <mean>0.0</mean>
          <stddev>1.7e-2</stddev>
          <bias_mean>0.1</bias_mean>
          <bias_stddev>0.001</bias_stddev>
          <!-- <mean>0.0</mean>
          <stddev>0.0</stddev>
          <bias_mean>0.0</bias_mean>
          <bias_stddev>0.0</bias_stddev> -->
        </noise>
      </y>
      <z>
        <noise type="gaussian">
          <mean>0.0</mean>
          <stddev>1.7e-2</stddev>
          <bias_mean>0.1</bias_mean>
          <bias_stddev>0.001</bias_stddev>
          <!-- <mean>0.0</mean>
          <stddev>0.0</stddev>
          <bias_mean>0.0</bias_mean>
          <bias_stddev>0.0</bias_stddev> -->
        </noise>
      </z>
    </linear_acceleration>
  </imu>
</sensor>
</gazebo>

<link name="lidar_link">
  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.125"/>
    <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
  </inertial>

  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
       <cylinder radius="0.0508" length="0.055"/>
    </geometry>
  </collision>

  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
       <cylinder radius="0.0508" length="0.055"/>
    </geometry>
  </visual>
</link>

<joint name="lidar_joint" type="fixed">
  <parent link="base_link"/>
  <child link="lidar_link"/>
  <origin xyz="0 0 ${base_height}" rpy="0 0 0"/>
</joint>

<gazebo reference="lidar_link">
  <sensor name="lidar" type="ray">
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>5</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1.000000</resolution>
          <min_angle>0.000000</min_angle>
          <max_angle>6.280000</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.120000</min>
        <max>50</max>
        <resolution>0.015000</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <namespace>${namespace}</namespace>
        <remapping>~/out:=/scan</remapping>
      </ros>
      <output_type>sensor_msgs/LaserScan</output_type>
      <frameName>lidar_link</frameName>
    </plugin>
  </sensor>
</gazebo>

<link name="camera_link">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.015 0.130 0.022"/>
    </geometry>
  </visual>

  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="0.015 0.130 0.022"/>
    </geometry>
  </collision>

  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.035"/>
    <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
  </inertial>
</link>

<joint name="camera_joint" type="fixed">
  <parent link="base_link"/>
  <child link="camera_link"/>
  <origin xyz="0.215 0 0.0" rpy="0 0 0"/>
</joint>

<link name="camera_depth_frame"/>

<joint name="camera_depth_joint" type="fixed">
  <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
  <parent link="camera_link"/>
  <child link="camera_depth_frame"/>
</joint>

<gazebo reference="camera_link">
  <sensor name="depth_camera" type="depth">
    <visualize>true</visualize>
    <update_rate>30.0</update_rate>
    <camera name="camera">
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
        <!-- <format>L8</format> -->
      </image>
      <!-- <clip>
        <near>0.05</near>
        <far>2000</far>
      </clip> -->
    </camera>
    <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <namespace>${namespace}</namespace>
      </ros>
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <frameName>camera_depth_frame</frameName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0</distortionK1>
      <distortionK2>0</distortionK2>
      <distortionK3>0</distortionK3>
      <distortionT1>0</distortionT1>
      <distortionT2>0</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
      <min_depth>0.05</min_depth>
      <max_depth>20</max_depth>

    </plugin>
  </sensor>
</gazebo>

<gazebo>
  <plugin name="gazebo_ros_simple_quad" filename="libgazebo_ros_simple_quad.so">
    <link_name>base_link</link_name>
  </plugin>
</gazebo>

</robot>
